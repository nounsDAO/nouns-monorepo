name: Node.js CI Pipeline

on:
  push:
    branches:
      - master
      - develop
      - 'feature/*'
      - 'bugfix/*'
      - 'release/*'
      - 'hotfix/*'
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    concurrency:
      group: ci-pipeline-${{ github.ref }}-node-${{ matrix.node-version }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - name: Restore turbo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            packages/**/.turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/turbo.json') }}
      - name: Install deps
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: pnpm install --frozen-lockfile
      - name: Build packages
        run: pnpm build
      - name: Netlify build
        run: pnpm netlify build --offline --filter packages/nouns-webapp

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - name: Restore turbo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            packages/**/.turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/turbo.json') }}
      - name: Install deps
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: pnpm install --frozen-lockfile
      - name: Run tests
        run: pnpm test

  lint:
    name: Lint
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm
      - name: Restore turbo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            packages/**/.turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/turbo.json') }}
      - name: Install deps
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: pnpm install --frozen-lockfile
      - name: Build packages
        run: pnpm build
      - name: Lint changed files
        run: |
          echo "::add-matcher::.github/eslint-matcher.json"
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          FILES=$(git diff --name-only --diff-filter=d "$BASE_SHA"..."$HEAD_SHA" -- '*.ts' '*.tsx' '*.js' '*.jsx')
          [ -z "$FILES" ] && echo 'no JS/TS changes' && exit 0
          pnpm lint $FILES

  translations:
    name: Check for missing translations
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm
      - name: Restore turbo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            packages/**/.turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/turbo.json') }}
      - name: Install deps
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: pnpm install --frozen-lockfile
      - name: Build packages
        run: pnpm build
      - name: Check for missing translations
        run: |
          pnpm --filter @nouns/webapp -- i18n:extract
          pnpm --filter @nouns/webapp -- i18n:compile --strict
